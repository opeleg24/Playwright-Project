{"name": "Test01: Verify site information: Header & Links", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 1 ]\n\nException: Expected: Top Deals, but got: Top Dealssssss\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()", "trace": "self = <test_cases.test_web.Test_Web object at 0x000001F6CC6FB020>\n\n    @allure.title(\"Test01: Verify site information: Header & Links\")\n    @allure.description(\"This test verifies the site Header & top Links\")\n    def test01_verify_empty_results(self):\n>       WebFlows.verify_top_site_information(get_data(\"HEADER\"),\n                                             get_data(\"OFFER\"),\n                                             get_data(\"TOP_DEAL\"),\n                                             get_data(\"FLIGHT_BOOKING\"))\n\ntest_cases\\test_web.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flow.py:23: in verify_top_site_information\n    verify_expectations()\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:24: in verify_expectations\n    report_exceptions()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def report_exceptions():\n        global failed_conditions\n        if failed_conditions:\n            report = ['Failed conditions count: [ {} ]\\n'.format(len(failed_conditions))]\n            for index, failure in enumerate(failed_conditions, start=1):\n                if len(failed_conditions) > 1:\n                    report.append('{}. {}'.format(index, failure))\n                else:\n                    report.append(failure)\n            failed_conditions = []\n>           raise AssertionError('\\n'.join(report))\nE           AssertionError: Failed conditions count: [ 1 ]\nE           \nE           Exception: Expected: Top Deals, but got: Top Dealssssss\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:43: AssertionError"}, "description": "This test verifies the site Header & top Links", "steps": [{"name": "Verify to site information:Header & Links", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 1 ]\n\nException: Expected: Top Deals, but got: Top Dealssssss\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n", "trace": "  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\playwright_project\\workflows\\web_flow.py\", line 23, in verify_top_site_information\n    verify_expectations()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 24, in verify_expectations\n    report_exceptions()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 43, in report_exceptions\n    raise AssertionError('\\n'.join(report))\n"}, "steps": [{"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='brand greenLogo']\">"}], "start": 1729176083510, "stop": 1729176083561}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "'GREENKART'"}, {"name": "expected", "value": "'GREENKART'"}], "start": 1729176083561, "stop": 1729176083561}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart'] a >> nth=0\">"}], "start": 1729176083561, "stop": 1729176083585}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "'Limited offer - FREE Core Java & QA Resume course'"}, {"name": "expected", "value": "'Limited offer - FREE Core Java & QA Resume course'"}], "start": 1729176083586, "stop": 1729176083586}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart'] a >> nth=1\">"}], "start": 1729176083586, "stop": 1729176083608}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "'Top Dealssssss'"}, {"name": "expected", "value": "'Top Deals'"}], "start": 1729176083608, "stop": 1729176083642}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart'] a >> nth=2\">"}], "start": 1729176083642, "stop": 1729176083664}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "'Flight Booking'"}, {"name": "expected", "value": "'Flight Booking'"}], "start": 1729176083664, "stop": 1729176083664}], "parameters": [{"name": "header", "value": "'GREENKART'"}, {"name": "offer", "value": "'Limited offer - FREE Core Java & QA Resume course'"}, {"name": "top_deal", "value": "'Top Dealssssss'"}, {"name": "flight_booking", "value": "'Flight Booking'"}], "start": 1729176083510, "stop": 1729176083665}], "attachments": [{"source": "f8617d8d-a278-4551-a9b5-a5a41d14fe9c-attachment.png", "type": "image/png"}], "start": 1729176083509, "stop": 1729176083665, "uuid": "fdf370cc-012f-46de-ae6e-fdbcb7f64e05", "historyId": "16ae3678846476292963c92b83612dd8", "testCaseId": "16ae3678846476292963c92b83612dd8", "fullName": "test_cases.test_web.Test_Web#test01_verify_empty_results", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_Web"}, {"name": "host", "value": "DESKTOP-L1RTC3B"}, {"name": "thread", "value": "24080-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}