{"name": "Test03: Add product to cart - verify amount in header display", "status": "broken", "statusDetails": {"message": "ValueError: invalid literal for int() with base 10: 'Brocolli - 1 Kg'", "trace": "self = <test_cases.test_web.Test_Web object at 0x0000013C9140AEA0>\n\n    @allure.title(\"Test03: Add product to cart - verify amount in header display\")\n    @allure.description(\"This test adds a product to the cart and verifies the amount in the header display\")\n    def test03_add_product_to_cart(self):\n        WebFlows.add_product_to_cart(product_name)\n>       WebFlows.verify_cart_information_in_header_display(product_name)\n\ntest_cases\\test_web.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nproduct_name = 'Brocolli - 1 Kg'\n\n    @staticmethod\n    @allure.step(\"Verify cart information in top header display\")\n    def verify_cart_information_in_header_display(product_name: str):\n        num_of_items = WebFlows.initial_header_items_counter\n        expected_num_of_items = int(UiActions.get_text(base.products_page.get_items_indicator_header()))\n        base.products_page.locate_product(product_name)\n>       price = int(UiActions.get_text(base.products_page.get_price_product()))\nE       ValueError: invalid literal for int() with base 10: 'Brocolli - 1 Kg'\n\nworkflows\\web_flow.py:93: ValueError"}, "description": "This test adds a product to the cart and verifies the amount in the header display", "steps": [{"name": "Add one product to cart", "status": "passed", "steps": [{"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[3]/button\">"}], "start": 1729493496990, "stop": 1729493497257}], "parameters": [{"name": "product_name", "value": "'Brocolli - 1 Kg'"}], "start": 1729493496990, "stop": 1729493497257}, {"name": "Verify cart information in top header display", "status": "broken", "statusDetails": {"message": "ValueError: invalid literal for int() with base 10: 'Brocolli - 1 Kg'\n", "trace": "  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\playwright_project\\workflows\\web_flow.py\", line 93, in verify_cart_information_in_header_display\n    price = int(UiActions.get_text(base.products_page.get_price_product()))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-info'] tr:first-child strong\">"}], "start": 1729493497257, "stop": 1729493497298}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../p >> nth=3\">"}], "start": 1729493497298, "stop": 1729493497320}], "parameters": [{"name": "product_name", "value": "'Brocolli - 1 Kg'"}], "start": 1729493497257, "stop": 1729493497320}], "start": 1729493496990, "stop": 1729493497321, "uuid": "2ad36156-2610-41ce-b094-19499e2d871e", "historyId": "7b053d7e59a60350469febe0a17af7f5", "testCaseId": "7b053d7e59a60350469febe0a17af7f5", "fullName": "test_cases.test_web.Test_Web#test03_add_product_to_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_Web"}, {"name": "host", "value": "DESKTOP-L1RTC3B"}, {"name": "thread", "value": "18988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}