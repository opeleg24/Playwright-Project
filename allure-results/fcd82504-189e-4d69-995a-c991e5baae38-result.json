{"name": "Test03: Add two product to cart - verify correct information in cart", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\nwaiting for locator(\"//*[contains(text(), 'Brocolli - 1 Kg')]\").locator(\"//../div[2]/a[1]\")\n  -   locator resolved to <a href=\"#\" class=\"decrement\">–</a>\n  - attempting click action\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #1\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #2\n  -   waiting 20ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #3\n  -   waiting 100ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n  -   <header>…</header> intercepts pointer events\n  - retrying click action, attempt #4\n  -   waiting 100ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n  -   <header>…</header> intercepts pointer events\n  - retrying click action, attempt #5\n  -   waiting 500ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling", "trace": "self = <test_cases.test_web.Test_Web object at 0x000001AD13A92960>\n\n    @pytest.mark.usefixtures(\"refresh_page\")\n    @allure.title(\"Test03: Add two product to cart - verify correct information in cart\")\n    @allure.description(\n        \"This test adds a product to the cart and verifies the correct information in the cart: name of product,\"\n        \"price display, and total amount\")\n    def test_verify_product_info_in_cart(self):\n>       WebFlows.add_product_to_cart(get_data(\"PRODUCT_ONE\"))\n\ntest_cases\\test_web.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flow.py:83: in add_product_to_cart\n    UiActions.click(base.products_page.increment_action_decrease())\nextentions\\ui_actions.py:10: in click\n    locator.click()\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15106: in click\n    self._sync(\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001AD13A18110>, cb = <function Channel.send.<locals>.<lambda> at 0x000001AD13E1B380>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nE           Call log:\nE           waiting for locator(\"//*[contains(text(), 'Brocolli - 1 Kg')]\").locator(\"//../div[2]/a[1]\")\nE             -   locator resolved to <a href=\"#\" class=\"decrement\">–</a>\nE             - attempting click action\nE             -   waiting for element to be visible, enabled and stable\nE             -   element is not stable\nE             - retrying click action, attempt #1\nE             -   waiting for element to be visible, enabled and stable\nE             -   element is not stable\nE             - retrying click action, attempt #2\nE             -   waiting 20ms\nE             -   waiting for element to be visible, enabled and stable\nE             -   element is not stable\nE             - retrying click action, attempt #3\nE             -   waiting 100ms\nE             -   waiting for element to be visible, enabled and stable\nE             -   element is visible, enabled and stable\nE             -   scrolling into view if needed\nE             -   done scrolling\nE             -   <header>…</header> intercepts pointer events\nE             - retrying click action, attempt #4\nE             -   waiting 100ms\nE             -   waiting for element to be visible, enabled and stable\nE             -   element is visible, enabled and stable\nE             -   scrolling into view if needed\nE             -   done scrolling\nE             -   <header>…</header> intercepts pointer events\nE             - retrying click action, attempt #5\nE             -   waiting 500ms\nE             -   waiting for element to be visible, enabled and stable\nE             -   element is visible, enabled and stable\nE             -   scrolling into view if needed\nE             -   done scrolling\n\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TargetClosedError"}, "description": "This test adds a product to the cart and verifies the correct information in the cart: name of product,price display, and total amount", "steps": [{"name": "Add one product to cart", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\nwaiting for locator(\"//*[contains(text(), 'Brocolli - 1 Kg')]\").locator(\"//../div[2]/a[1]\")\n  -   locator resolved to <a href=\"#\" class=\"decrement\">–</a>\n  - attempting click action\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #1\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #2\n  -   waiting 20ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #3\n  -   waiting 100ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n  -   <header>…</header> intercepts pointer events\n  - retrying click action, attempt #4\n  -   waiting 100ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n  -   <header>…</header> intercepts pointer events\n  - retrying click action, attempt #5\n  -   waiting 500ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n\n", "trace": "  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\playwright_project\\workflows\\web_flow.py\", line 83, in add_product_to_cart\n    UiActions.click(base.products_page.increment_action_decrease())\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\playwright_project\\extentions\\ui_actions.py\", line 10, in click\n    locator.click()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15106, in click\n    self._sync(\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 156, in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 488, in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 59, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 514, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "steps": [{"name": "Clicking element", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\nwaiting for locator(\"//*[contains(text(), 'Brocolli - 1 Kg')]\").locator(\"//../div[2]/a[1]\")\n  -   locator resolved to <a href=\"#\" class=\"decrement\">–</a>\n  - attempting click action\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #1\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #2\n  -   waiting 20ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is not stable\n  - retrying click action, attempt #3\n  -   waiting 100ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n  -   <header>…</header> intercepts pointer events\n  - retrying click action, attempt #4\n  -   waiting 100ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n  -   <header>…</header> intercepts pointer events\n  - retrying click action, attempt #5\n  -   waiting 500ms\n  -   waiting for element to be visible, enabled and stable\n  -   element is visible, enabled and stable\n  -   scrolling into view if needed\n  -   done scrolling\n\n", "trace": "  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\playwright_project\\extentions\\ui_actions.py\", line 10, in click\n    locator.click()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15106, in click\n    self._sync(\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 156, in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 488, in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 59, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 514, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[2]/a[1]\">"}], "start": 1729758826928, "stop": 1729758828049}], "parameters": [{"name": "product_name", "value": "'Brocolli - 1 Kg'"}], "start": 1729758826928, "stop": 1729758828049}], "start": 1729758826928, "stop": 1729758828049, "uuid": "f0ca4a13-17fc-4913-9fc9-2aaca823ee09", "historyId": "dc26ad23e8604c026ddd9031d115c398", "testCaseId": "dc26ad23e8604c026ddd9031d115c398", "fullName": "test_cases.test_web.Test_Web#test_verify_product_info_in_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('refresh_page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_Web"}, {"name": "host", "value": "DESKTOP-L1RTC3B"}, {"name": "thread", "value": "33060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}