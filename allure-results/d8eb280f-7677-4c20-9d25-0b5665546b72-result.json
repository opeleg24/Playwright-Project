{"name": "Test02: Add product to cart - verify amount in header display", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 3 ]\n\n1. Exception: Expected: 1, but got: 1 when verifying num of items\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n2. Exception: Expected: 120, but got: 120 when verifying price\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n3. Exception: Expected: 120, but got: 120 when verifying price header\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()", "trace": "self = <test_cases.test_web.Test_Web object at 0x0000014850CA9280>\n\n    @allure.title(\"Test02: Add product to cart - verify amount in header display\")\n    @allure.description(\"This test adds a product to the cart and verifies the amount in the header display\")\n    def test_add_product_to_cart(self):\n        WebFlows.add_product_to_cart(get_data(\"PRODUCT_NAME\"))\n        WebFlows.click_cart_button()\n>       WebFlows.verify_cart_information_in_header_display(get_data(\"COUNTER_ONE_PRODUCT\"),\n                                                           get_data(\"PRODUCT_ONE_PRICE\"))\n\ntest_cases\\test_web.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flow.py:104: in verify_cart_information_in_header_display\n    verify_expectations()\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:24: in verify_expectations\n    report_exceptions()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def report_exceptions():\n        global failed_conditions\n        if failed_conditions:\n            report = ['Failed conditions count: [ {} ]\\n'.format(len(failed_conditions))]\n            for index, failure in enumerate(failed_conditions, start=1):\n                if len(failed_conditions) > 1:\n                    report.append('{}. {}'.format(index, failure))\n                else:\n                    report.append(failure)\n            failed_conditions = []\n>           raise AssertionError('\\n'.join(report))\nE           AssertionError: Failed conditions count: [ 3 ]\nE           \nE           1. Exception: Expected: 1, but got: 1 when verifying num of items\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\nE           \nE           2. Exception: Expected: 120, but got: 120 when verifying price\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\nE           \nE           3. Exception: Expected: 120, but got: 120 when verifying price header\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:43: AssertionError"}, "description": "This test adds a product to the cart and verifies the amount in the header display", "steps": [{"name": "Add one product to cart", "status": "passed", "steps": [{"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[2]/a[1]\">"}], "start": 1729593682232, "stop": 1729593682492}, {"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[3]/button\">"}], "start": 1729593682492, "stop": 1729593682703}], "parameters": [{"name": "product_name", "value": "'Brocolli - 1 Kg'"}], "start": 1729593682232, "stop": 1729593682703}, {"name": "Click the cart button", "status": "passed", "steps": [{"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-icon']\">"}], "start": 1729593682703, "stop": 1729593682935}], "start": 1729593682703, "stop": 1729593682935}, {"name": "Verify cart information in top header display", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 3 ]\n\n1. Exception: Expected: 1, but got: 1 when verifying num of items\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n2. Exception: Expected: 120, but got: 120 when verifying price\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n3. Exception: Expected: 120, but got: 120 when verifying price header\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n", "trace": "  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\playwright_project\\workflows\\web_flow.py\", line 104, in verify_cart_information_in_header_display\n    verify_expectations()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 24, in verify_expectations\n    report_exceptions()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 43, in report_exceptions\n    raise AssertionError('\\n'.join(report))\n"}, "steps": [{"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-info'] tr:first-child strong\">"}], "start": 1729593682938, "stop": 1729593682970}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "1"}, {"name": "expected", "value": "'1'"}, {"name": "message", "value": "'num of items'"}], "start": 1729593682971, "stop": 1729593682984}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../p >> nth=2\">"}], "start": 1729593682984, "stop": 1729593683005}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "120"}, {"name": "expected", "value": "'120'"}, {"name": "message", "value": "'price'"}], "start": 1729593683005, "stop": 1729593683013}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-info'] tr:last-child strong\">"}], "start": 1729593683013, "stop": 1729593683034}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "120"}, {"name": "expected", "value": "'120'"}, {"name": "message", "value": "'price header'"}], "start": 1729593683034, "stop": 1729593683039}], "parameters": [{"name": "expected_items_counter", "value": "'1'"}, {"name": "expected_price", "value": "'120'"}], "start": 1729593682938, "stop": 1729593683039}], "start": 1729593682232, "stop": 1729593683040, "uuid": "5511ef56-7d3d-4194-92ca-f8ef1934a0ff", "historyId": "23fb4347d00468b9a21db3d0c591bd01", "testCaseId": "23fb4347d00468b9a21db3d0c591bd01", "fullName": "test_cases.test_web.Test_Web#test_add_product_to_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_Web"}, {"name": "host", "value": "DESKTOP-L1RTC3B"}, {"name": "thread", "value": "28848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}