{"name": "Test03: Add product to cart - verify amount in header display", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 3 ]\n\n1. Exception: Expected: 0, but got: <Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-info'] tr:first-child strong\">\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n2. Exception: Expected: 0, but got: <Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-info'] tr:last-child strong\">\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n3. Exception: Expected: ✔ ADDED, but got: ADDED\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()", "trace": "self = <test_cases.test_web.Test_Web object at 0x00000227D08C0C50>\n\n    @allure.title(\"Test03: Add product to cart - verify amount in header display\")\n    @allure.description(\"This test adds a product to the cart and verifies the amount in the header display\")\n    def test03_add_product_to_cart(self):\n        WebFlows.add_product_to_cart(product_name)\n>       WebFlows.verify_message_displayed_after_adding_cart(\"ADDED\")\n\ntest_cases\\test_web.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flow.py:48: in verify_message_displayed_after_adding_cart\n    verify_expectations()\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:24: in verify_expectations\n    report_exceptions()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def report_exceptions():\n        global failed_conditions\n        if failed_conditions:\n            report = ['Failed conditions count: [ {} ]\\n'.format(len(failed_conditions))]\n            for index, failure in enumerate(failed_conditions, start=1):\n                if len(failed_conditions) > 1:\n                    report.append('{}. {}'.format(index, failure))\n                else:\n                    report.append(failure)\n            failed_conditions = []\n>           raise AssertionError('\\n'.join(report))\nE           AssertionError: Failed conditions count: [ 3 ]\nE           \nE           1. Exception: Expected: 0, but got: <Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-info'] tr:first-child strong\">\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\nE           \nE           2. Exception: Expected: 0, but got: <Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-info'] tr:last-child strong\">\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\nE           \nE           3. Exception: Expected: ✔ ADDED, but got: ADDED\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:43: AssertionError"}, "description": "This test adds a product to the cart and verifies the amount in the header display", "steps": [{"name": "Add product to cart", "status": "passed", "steps": [{"name": "Double clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[2]/a[2]\">"}], "start": 1729422634816, "stop": 1729422635085}, {"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[3]/button\">"}], "start": 1729422635085, "stop": 1729422635295}], "parameters": [{"name": "product_name", "value": "'Brocolli - 1 Kg'"}], "start": 1729422634816, "stop": 1729422635295}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[3]/button\">"}], "start": 1729422635296, "stop": 1729422635328}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "'ADDED'"}, {"name": "expected", "value": "'✔ ADDED'"}], "start": 1729422635328, "stop": 1729422635335}], "start": 1729422634815, "stop": 1729422635335, "uuid": "4eecee2a-1afc-41b1-adc3-72857f944555", "historyId": "7b053d7e59a60350469febe0a17af7f5", "testCaseId": "7b053d7e59a60350469febe0a17af7f5", "fullName": "test_cases.test_web.Test_Web#test03_add_product_to_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_Web"}, {"name": "host", "value": "DESKTOP-L1RTC3B"}, {"name": "thread", "value": "25364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}