{"name": "Test04: Add two product to cart - verify correct information in cart", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 1 ]\n\nException: Expected: 120, but got: 240\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()", "trace": "self = <test_cases.test_web.Test_Web object at 0x00000164D2EEB020>\n\n    @allure.title(\"Test04: Add two product to cart - verify correct information in cart\")\n    @allure.description(\n        \"This test adds a product to the cart and verifies the correct information in the cart: name of product,\"\n        \"price display, and total amount\")\n    def test_verify_product_info_in_cart(self):\n        WebFlows.add_product_to_cart(product_name)\n        WebFlows.add_two_products_to_cart(product_name_2)\n>       WebFlows.verify_cart_information_in_cart(product_name, product_name_2, 120, 120)\n\ntest_cases\\test_web.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flow.py:142: in verify_cart_information_in_cart\n    verify_expectations()\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:24: in verify_expectations\n    report_exceptions()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def report_exceptions():\n        global failed_conditions\n        if failed_conditions:\n            report = ['Failed conditions count: [ {} ]\\n'.format(len(failed_conditions))]\n            for index, failure in enumerate(failed_conditions, start=1):\n                if len(failed_conditions) > 1:\n                    report.append('{}. {}'.format(index, failure))\n                else:\n                    report.append(failure)\n            failed_conditions = []\n>           raise AssertionError('\\n'.join(report))\nE           AssertionError: Failed conditions count: [ 1 ]\nE           \nE           Exception: Expected: 120, but got: 240\nE           Fail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n..\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:43: AssertionError"}, "description": "This test adds a product to the cart and verifies the correct information in the cart: name of product,price display, and total amount", "steps": [{"name": "Add one product to cart", "status": "passed", "steps": [{"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[2]/a[1]\">"}], "start": 1729518805767, "stop": 1729518806021}, {"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Brocolli - 1 Kg')] >> //../div[3]/button\">"}], "start": 1729518806021, "stop": 1729518806254}], "parameters": [{"name": "product_name", "value": "'Brocolli - 1 Kg'"}], "start": 1729518805767, "stop": 1729518806254}, {"name": "Add two product to cart", "status": "passed", "steps": [{"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Cauliflower - 1 Kg')] >> //../div[2]/a[2]\">"}], "start": 1729518806254, "stop": 1729518806469}, {"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"//*[contains(text(), 'Cauliflower - 1 Kg')] >> //../div[3]/button\">"}], "start": 1729518806469, "stop": 1729518806687}], "parameters": [{"name": "product_name", "value": "'Cauliflower - 1 Kg'"}], "start": 1729518806254, "stop": 1729518806687}, {"name": "Verify cart information in top header display", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 1 ]\n\nException: Expected: 120, but got: 240\nFail in \"C:\\Automation\\playwright_project\\extentions\\verifications.py:15\" verify_soft_assert_equals()\n\n", "trace": "  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\playwright_project\\workflows\\web_flow.py\", line 142, in verify_cart_information_in_cart\n    verify_expectations()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 24, in verify_expectations\n    report_exceptions()\n  File \"C:\\Automation\\Playwright\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 43, in report_exceptions\n    raise AssertionError('\\n'.join(report))\n"}, "steps": [{"name": "Clicking element", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-icon']\">"}], "start": 1729518806687, "stop": 1729518806919}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"p[class='product-name'] >> nth=0\">"}], "start": 1729518806919, "stop": 1729518806956}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"p[class='product-name'] >> nth=-1\">"}], "start": 1729518806956, "stop": 1729518806980}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "'Brocolli - 1 Kg'"}, {"name": "expected", "value": "'Brocolli - 1 Kg'"}], "start": 1729518806981, "stop": 1729518806981}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "'Cauliflower - 1 Kg'"}, {"name": "expected", "value": "'Cauliflower - 1 Kg'"}], "start": 1729518806981, "stop": 1729518806981}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-item'] p[class='product-price'] >> nth=0\">"}], "start": 1729518806981, "stop": 1729518807014}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-item'] p[class='product-price'] >> nth=-1\">"}], "start": 1729518807014, "stop": 1729518807034}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-item'] [class='quantity'] >> nth=0\">"}], "start": 1729518807035, "stop": 1729518807047}, {"name": "Getting text", "status": "passed", "parameters": [{"name": "locator", "value": "<Locator frame=<Frame name= url='https://rahulshettyacademy.com/seleniumPractise/#/'> selector=\"[class='cart-item'] [class='quantity'] >> nth=-1\">"}], "start": 1729518807047, "stop": 1729518807081}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "120"}, {"name": "expected", "value": "120"}], "start": 1729518807083, "stop": 1729518807083}, {"name": "Verifying equals using smart assertions", "status": "passed", "parameters": [{"name": "actual", "value": "240"}, {"name": "expected", "value": "120"}], "start": 1729518807083, "stop": 1729518807083}], "parameters": [{"name": "product_one", "value": "'Brocolli - 1 Kg'"}, {"name": "product_two", "value": "'Cauliflower - 1 Kg'"}, {"name": "expected_total_price_for_one_product", "value": "120"}, {"name": "expected_total_price_for_two_products", "value": "120"}], "start": 1729518806687, "stop": 1729518807083}], "start": 1729518805767, "stop": 1729518807083, "uuid": "58b9c573-bd14-4e7d-bfa2-a811b3b39d71", "historyId": "dc26ad23e8604c026ddd9031d115c398", "testCaseId": "dc26ad23e8604c026ddd9031d115c398", "fullName": "test_cases.test_web.Test_Web#test_verify_product_info_in_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_Web"}, {"name": "host", "value": "DESKTOP-L1RTC3B"}, {"name": "thread", "value": "4360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}