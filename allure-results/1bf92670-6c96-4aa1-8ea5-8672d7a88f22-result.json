{"name": "Test01: Verify initial amount of items & products in header display", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Page.goto: Target page, context or browser has been closed\nCall log:\nnavigating to \"https://rahulshettyacademy.com/seleniumPractise/#/\", waiting until \"load\"", "trace": "playwright = <playwright._impl._playwright.Playwright object at 0x0000016EEC638440>\n\n    @pytest.fixture(scope='class')\n    def init_page(playwright: Playwright):\n        browser_type = get_data('BROWSER_TYPE').lower()\n        slow_motion = int(get_data('SLOW_MODE'))\n        if browser_type == \"chrome\":\n            base.browser = playwright.chromium.launch(headless=False, channel=\"chrome\", slow_mo=slow_motion)\n        elif browser_type == \"firefox\":\n            base.browser = playwright.firefox.launch(headless=False, channel=\"firefox\", slow_mo=slow_motion)\n        elif browser_type == \"edge\":\n            base.browser = playwright.webkit.launch(headless=False, channel=\"msedge\", slow_mo=slow_motion)\n        base.context = base.browser.new_context()\n        # Start tracing before creating a context\n        base.context.tracing.start(screenshots=True, snapshots=True, sources=True)\n        base.page = base.context.new_page()\n        base.page.set_default_timeout(150000)\n        Base.init_pages()\n>       base.page.goto(get_data('BASE_URL'))\n\ntest_cases\\conftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:8843: in goto\n    self._sync(\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_page.py:524: in goto\n    return await self._main_frame.goto(**locals_to_params(locals()))\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:145: in goto\n    await self._channel.send(\"goto\", locals_to_params(locals()))\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000016EEB4CC6B0>, cb = <function Channel.send.<locals>.<lambda> at 0x0000016EEC6018A0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Page.goto: Target page, context or browser has been closed\nE           Call log:\nE           navigating to \"https://rahulshettyacademy.com/seleniumPractise/#/\", waiting until \"load\"\n\n..\\Playwright\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TargetClosedError"}, "description": "This test verifies the initial amount of items & products in the header display", "start": 1729758608463, "stop": 1729758608463, "uuid": "4450866e-ad10-4405-82e3-23fbc54fa789", "historyId": "b2e7d84812de730d77b285b8d8c7dc18", "testCaseId": "b2e7d84812de730d77b285b8d8c7dc18", "fullName": "test_cases.test_web.Test_Web#test_verify_initial_header_amount", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_Web"}, {"name": "host", "value": "DESKTOP-L1RTC3B"}, {"name": "thread", "value": "16540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}